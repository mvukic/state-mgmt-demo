var j=Object.defineProperty,k=Object.defineProperties;var l=Object.getOwnPropertyDescriptors;var e=Object.getOwnPropertySymbols;var g=Object.prototype.hasOwnProperty,h=Object.prototype.propertyIsEnumerable;var f=(a,b,c)=>b in a?j(a,b,{enumerable:!0,configurable:!0,writable:!0,value:c}):a[b]=c,m=(a,b)=>{for(var c in b||={})g.call(b,c)&&f(a,c,b[c]);if(e)for(var c of e(b))h.call(b,c)&&f(a,c,b[c]);return a},n=(a,b)=>k(a,l(b));var o=(a,b)=>{var c={};for(var d in a)g.call(a,d)&&b.indexOf(d)<0&&(c[d]=a[d]);if(a!=null&&e)for(var d of e(a))b.indexOf(d)<0&&h.call(a,d)&&(c[d]=a[d]);return c};var i=(a,b,c)=>{if(!b.has(a))throw TypeError("Cannot "+c)};var p=(a,b,c)=>(i(a,b,"read from private field"),c?c.call(a):b.get(a)),q=(a,b,c)=>{if(b.has(a))throw TypeError("Cannot add the same private member more than once");b instanceof WeakSet?b.add(a):b.set(a,c)},r=(a,b,c,d)=>(i(a,b,"write to private field"),d?d.call(a,c):b.set(a,c),c);export{m as a,n as b,o as c,p as d,q as e,r as f};
